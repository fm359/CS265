Chapter 1 Problems

1.1 considering positive logic, TRUE should be defined as 1 and FALSE should be defined as 0. And the variable not-eof should have a proper name such as notEOF or not_eof. Or better option would be to change the representation of the variable so that it matches the intention of the if statement, that is to return true if ch == EOF. So it would be best to name the variable isEOF or is_eof.

1.2 int is_smaller(char *char1, char *char2) {
        return strcmp(char1, char2) < 0;
    }

1.3 the variables inside the function have unpronouncable names making the line impossible to read aloud.

1.4 if (c != 'y' && c != 'Y')
        reutrn;

    if (length > BUFFSIZE)
        length = BUFFSIZE;

    flag = !flag;

    quote = (*line == '"');

    bit = val & 1;

1.5 the order of evaluation of ht arguments in the function insert is not defined. This can lead to undesired code behaviour.

1.6 1,2 or 2,1

1.7 if (!istty(stdin) && !istty(stdout) && !istty(stderr))
        return 0;

    if (retval != SUCCESS)
    {
        return retval;
    }

    for (k = 0; k < 5; k++) {
        scanf("%lf", &dx);
        x += dx;
    }

1.8 while (count < total) {
        if (this.getName(count) == nameTable.userName()) {
            return true;
        }
        count++;
    }

1.9 #define ISDIGIT(c) ((c) >= '0' && (c) <= '9')

1.10 static const double FT2METER = 0.30408;
     static const double METER2FT = 3.28084;
     static const double MI2FT = 5280.0;
     static const double MI2KM = 1.609344;
     static const double SQMI2SQKM = 2.589988;

1.11 void function does not return anything
     code is not testing for even number
     function name is self-explanatory so first line comment is not necessary. So is incrementation.
